#version 450

layout(set = 0, binding = 0, rgba16f) uniform readonly image2D src;
layout(set = 0, binding = 1, rgba16f) uniform writeonly image2D dst;

layout(local_size_x = 16, local_size_y = 16, local_size_z = 1) in;

ivec2 src_size = imageSize(src);
ivec2 global_id = ivec2(gl_GlobalInvocationID.xy);

float weights[25] = {
	0.002969016743950497,
	0.013306209891013651,
	0.021938231279714643,
	0.013306209891013651,
	0.002969016743950497,
	0.013306209891013651,
	0.05963429543618014,
	0.09832033134884575,
	0.05963429543618014,
	0.013306209891013651,
	0.021938231279714643,
	0.09832033134884575,
	0.16210282163712664,
	0.09832033134884575,
	0.021938231279714643,
	0.013306209891013651,
	0.05963429543618014,
	0.09832033134884575,
	0.05963429543618014,
	0.013306209891013651,
	0.002969016743950497,
	0.013306209891013651,
	0.021938231279714643,
	0.013306209891013651,
	0.002969016743950497
};

void main()
{
	vec4 sum = vec4(0.0);

	if(global_id.x >= src_size.x || global_id.y >= src_size.y) return;

#pragma unroll_loop_start
	for(int i = 0; i < 5; i++)
		for(int j = 0; j < 5; j++)
		{
			ivec2 coord = clamp(global_id + ivec2(i - 2, j - 2), ivec2(0, 0), src_size - ivec2(1, 1));
			sum += imageLoad(src, coord) * weights[i * 5 + j];
		}
#pragma unroll_loop_end

	imageStore(dst, global_id, sum);
}