project("Deferred Shading Vulkan")

add_executable(deferred_shading_cpp)
aux_source_directory(src deferred_shading_cpp_src)
target_sources(deferred_shading_cpp PRIVATE ${deferred_shading_cpp_src})
target_link_libraries(deferred_shading_cpp PRIVATE vklib_hpp vklib_hpp_sdl2)
target_include_directories(deferred_shading_cpp PRIVATE ./include)

find_package(imgui CONFIG REQUIRED)
target_link_libraries(deferred_shading_cpp PRIVATE imgui::imgui)

find_path(TINYGLTF_INCLUDE_DIRS "tiny_gltf.h")
target_include_directories(deferred_shading_cpp PRIVATE ${TINYGLTF_INCLUDE_DIRS})

compile_shader(deferred_shading_cpp shaders/bloom-acc.comp bloom_acc_comp)
compile_shader(deferred_shading_cpp shaders/bloom-blur.comp bloom_blur_comp)
compile_shader(deferred_shading_cpp shaders/bloom-filter.comp bloom_filter_comp)
compile_shader(deferred_shading_cpp shaders/composite.frag composite_frag)
compile_shader(deferred_shading_cpp shaders/cube.vert cube_vert)
compile_shader(deferred_shading_cpp shaders/exposure-lerp.comp exposure_lerp_comp)
compile_shader(deferred_shading_cpp shaders/gbuffer.frag gbuffer_frag)
compile_shader(deferred_shading_cpp shaders/gbuffer.vert gbuffer_vert)
compile_shader(deferred_shading_cpp shaders/gen-brdf.comp gen_brdf_comp)
compile_shader(deferred_shading_cpp shaders/gen-cubemap.frag gen_cubemap_frag)
compile_shader(deferred_shading_cpp shaders/gen-diffuse.frag gen_diffuse_frag)
compile_shader(deferred_shading_cpp shaders/gen-specular.frag gen_specular_frag)
compile_shader(deferred_shading_cpp shaders/lighting.frag lighting_frag)
compile_shader(deferred_shading_cpp shaders/luminance.comp luminance_comp)
compile_shader(deferred_shading_cpp shaders/quad.vert quad_vert)
compile_shader(deferred_shading_cpp shaders/shadow.frag shadow_frag)
compile_shader(deferred_shading_cpp shaders/shadow.vert shadow_vert)

binary_dependency(deferred_shading_cpp assets/roboto.ttf roboto_font)
binary_dependency(deferred_shading_cpp assets/damaged-helmet.glb damaged_helmet)
binary_dependency(deferred_shading_cpp assets/builtin-hdr.hdr builtin_hdr)